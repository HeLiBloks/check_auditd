#!/usr/bin/env bash

declare -A opthash=();
while true
do
    case "${1}" in
        -h|--help)    echo "TODO:"; exit 0;;
        -d|--debug) DEBUG=1; shift; continue;;
        -t|--timeframe) timeframe=${1:-today}; shift; continue;;
        -a|--auargs) auargs=${1}; shift; continue;;
        -f|--file)
            [[ ! "$2" =~ ^- ]] && FILE=${2:-/tmp/.checkreport}
            shift 2; continue ;;
        --[a-zA-Z][a-zA-Z=]*) # dynamically grab long-options saving opt as hash key and arg as its value
            opt="${1#*--}"
            if [[ ! "$2" =~ ^- ]] ; then
                opthash[$opt]="${2//[^0-9c]/\;}"
                shift 2; continue
            elif [[ "$2" =~ ^- ]] ; then
                value="${opt#*=}"
                opthash[${opt%%=*}]="${value//[^0-9c]/\;}"
                shift 1
            fi
            ;;
        --|*) # everything else, end of input reading
            shift; break ;;
    esac
done

[[ -n $DEBUG ]] && for key in "${!opthash[@]}"; do
    echo key: "$key"
    echo value: "${opthash[$key]}"
done
FILE=${FILE:-/tmp/.checkreport}

if ! test -f "$FILE" ;then
    touch "${FILE}"
    chmod 0600 "${FILE}"
fi

timeframe=${timeframe:-today}
declare -A aurray=();

while read -r key value; do
    aurray["$key"]="$value";
done < "${FILE}"

declare -A deltaray=();

# print header for DEBUG
[[ -n $DEBUG ]] && DEBUG="key\told\tcurrent\tdelta\n"
while read -r key value; do
        deltaray["$key"]=$(( $value - ${aurray["$key"]:-0} ))

        [[ ${deltaray["$key"]} -gt 0 ]] && export metrics="${metrics} $key=${deltaray[$key]};"
        [[ -n $DEBUG ]] && export DEBUG="${debug}${key}\t${aurray[$key]}\t${value}\t${deltaray[$key]}\n"
    done <<< "$( aureport --summary -i -ts "${timeframe}" ${auargs} | awk -v'FS=: ' '
        /^Number of/ { nr=$2;
            gsub(/(Number of )|\W|[0-9]/," ",$0);
            gsub(/\s+/,"",$0);
            print $1,nr}' | tee /tmp/.checkreport)"

#echo ${!newrray[@]}

echo "$metrics"
[[ -n ${debug} ]] && printf  "$debug" | column -t


